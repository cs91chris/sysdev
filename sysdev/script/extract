#!/bin/bash
#
# $@ compress archive list of various format
#

# shellcheck source=/dev/null
source "${BASH_LIB}/color.conf"

# shellcheck source=/dev/null
source "${BASH_LIB}/writelog.sh" "extract"


FILES=$@
err_exit=0


function ERR_MSG() {
#
# $1 error message
#
	err_exit=1
	local message="${1}"

	if type WRITE_LOG &> /dev/null
	then
		WRITE_LOG "${ERROR}" "${message}"
	else
		echo -e "${red}${message}${reset}"
	fi
}

function EXTRACT() {
#
# $1 file to be extracted
# $2 program that extracts
# $3 options of $2
#
	local mess
	local file=${1}
	local cmd=${2}
	local opt=${3}

	if [[ ${cmd} != "NONE" ]]; then
		mess=$(${cmd} "${opt}" "${file}" 2>&1)

		# shellcheck disable=SC2181
		if [[ $? -eq 0 ]]; then
			echo -e "\t'${file}' ${green}extracted!${reset}"
		else
			ERR_MSG "${mess}"
		fi
	fi
}


case $1 in
	h|-h|help|--help)
		echo -e "\nArchive supported:"
		echo -e "\t${orange}zip,   rar,  tar,  tar.xz,  tar.bz2,  tar.gz${reset}"
		echo -e "\t${orange}tbz2,  bz2,  gz,   7z,      tgz,      Z${reset}\n"

		if type WRITE_LOG &> /dev/null ; then
			echo -e "In case of error see:"
			echo -e "\t${orange}$FILE_LOG${reset}\n"
		fi
		exit 0
	;;
esac

for file in ${FILES}
do
    CMD="NONE"
	OPT=""

	if [[ -f ${file} ]] ; then
		case ${file} in
			*.tar.xz)	CMD="tar"        ; OPT="Jxf" ;;
			*.tar.bz2)	CMD="tar"        ; OPT="xjf" ;;
			*.tar.gz)	CMD="tar"        ; OPT="xzf" ;;
			*.Z) 		CMD="uncompress" ; OPT=""    ;;
			*.7z)		CMD="7z"         ; OPT="x"   ;;
			*.gz)		CMD="gunzip"     ; OPT=""    ;;
			*.rar)		CMD="unrar"      ; OPT="x"   ;;
			*.zip)		CMD="unzip"      ; OPT=""    ;;
			*.bz2)		CMD="bunzip2"    ; OPT=""    ;;
			*.tar)		CMD="tar"        ; OPT="xf"  ;;
			*.tgz)		CMD="tar"        ; OPT="xzf" ;;
			*.tbz2)		CMD="tar"        ; OPT="xjf" ;;
			*)
				ERR_MSG "extension of '${file}' not supported"
				continue
			;;
		esac

		EXTRACT "${file}" ${CMD} ${OPT} &
	else
		ERR_MSG "'${file}' is not a valid file!"
	fi
done

exit ${err_exit}
